
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина; 
	Движения.ВКМ_ВыставленныеКОплатеРаботы.Записывать = Истина;

	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Движение = Движения.ВКМ_ВыставленныеКОплатеРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.приход;
		Движение.Период = Дата;
		Движение.ВКМ_Клиент = Контрагент;  
		Движение.ВКМ_Договор = Договор;
		Движение.ВКМ_Номенклатура = ТекСтрокаУслуги.Номенклатура;
		Движение.ВКМ_СуммаКУплате = ТекСтрокаУслуги.Сумма;
		Движение.ВКМ_Количество = ТекСтрокаУслуги.Количество;
	КонецЦикла;
	

КонецПроцедуры

Процедура ВКМ_ВыполнитьАвтозаполнение() экспорт  
	НоменклатураАбонентскаяПлата  = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста  = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	Если не ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) Тогда
		Сообщить("Не заполнена константа Номенклатура абоненская плата");
		Возврат;
	КонецЕсли;
	Если не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
		Сообщить("Не заполнена константа Номенклатура работы специалиста");
		Возврат;		
	КонецЕсли;   
	
	Услуги.Очистить();
	СуммаАбонентскойПлаты = ЭтотОбъект.Договор.ВКМ_СуммаАбонентскойПлаты; 
	Если СуммаАбонентскойПлаты <> 0 Тогда 
		НоваяСтрока1 = Услуги.Добавить();
		НоваяСтрока1.Номенклатура = НоменклатураАбонентскаяПлата;
		НоваяСтрока1.Сумма = СуммаАбонентскойПлаты; 
	КонецЕсли;   
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_Договор КАК Договор,
		|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_КоличествоЧасовОборот) КАК Количество,
		|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_СуммаКОплатеОборот) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоМесяца, &КонецМесяца, , ВКМ_Договор = &ВКМ_Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_Договор";
	
	Запрос.УстановитьПараметр("ВКМ_Договор", ЭтотОбъект.Договор);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ЭтотОбъект.Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = НоменклатураРаботыСпециалиста;
		НоваяСтрока.Количество = ВыборкаДетальныеЗаписи.Количество;
		НоваяСтрока.Сумма = ВыборкаДетальныеЗаписи.Сумма; 
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
