
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если ВКМ_Договор.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		Сообщить("Вид договора не является 'Абоненское обслуживание'");
		отказ = истина;
	КонецЕсли;
	
	Если (Дата <= ВКМ_Договор.ВКМ_ДатаНачалаДействия и Дата>=ВКМ_Договор.ВКМ_ДатаОкончанияДействия) Тогда
		Сообщить("Дата документа выходит за рамки периода действия договора");	
		отказ = истина;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Сотрудник", ВКМ_Специалист);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если не ВыборкаДетальныеЗаписи.Следующий() Тогда
		Сообщить("Специалисту на дату документа не установлен процент от работ");	
		отказ = истина;	 
	Иначе   
		ПроцентОтРабот = ВыборкаДетальныеЗаписи.ПроцентОтРабот;
	КонецЕсли;

	Если (Дата <= ВКМ_Договор.ВКМ_ДатаНачалаДействия и Дата>=ВКМ_Договор.ВКМ_ДатаОкончанияДействия) Тогда
		Сообщить("Дата документа выходит за рамки периода действия договора");	
		отказ = истина;  
	КонецЕсли; 
	
	СтавкаЧасаДоговора = ВКМ_Договор.ВКМ_СтоимостьЧаса; 
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина; 
	Для каждого стр из ВКМ_ВыполненныеРаботы Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.ВКМ_Договор = ВКМ_Договор;
		Движение.ВКМ_Клиент = ВКМ_Клиент;
		Движение.ВКМ_КоличествоЧасов = стр.ВКМ_ЧасыКОплате;
		Движение.ВКМ_СуммаКОплате = стр.ВКМ_ЧасыКОплате * СтавкаЧасаДоговора; 
	КонецЦикла;

	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = истина;
	
	ЧасовКОплатеКлиенту = ВКМ_ВыполненныеРаботы.Итог("ВКМ_ЧасыКОплате"); 
	СтавкаЧасаКлиента = ВКМ_Договор.ВКМ_СтоимостьЧаса;
	
	Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;	
	Движение.Сотрудник = ВКМ_Специалист;	 
	Движение.ЧасовКОплате = ЧасовКОплатеКлиенту;
	Движение.СуммаКОплате = ЧасовКОплатеКлиенту * СтавкаЧасаКлиента * ПроцентОтРабот / 100;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ТекстСообщения = "";
	Если ЭтоНовый() Тогда
		ТекстСообщения = "Документ записывается первый раз";
	ИначеЕсли ЭтотОбъект.ВКМ_ВремяНачалаРабот <> Ссылка.ВКМ_ВремяНачалаРабот Тогда
		ТекстСообщения = СТРШаблон("Время начала работ изменилась изменилась %1",ЭтотОбъект.Ссылка);
	ИначеЕсли ЭтотОбъект.ВКМ_ВремяОкончанияРабот <> Ссылка.ВКМ_ВремяОкончанияРабот Тогда
		ТекстСообщения = СТРШаблон("Время окончания работ изменилась изменилась %1",ЭтотОбъект.Ссылка); 
	ИначеЕсли ЭтотОбъект.ВКМ_ДатаПроведенияРабот <> Ссылка.ВКМ_ДатаПроведенияРабот Тогда 
		ТекстСообщения = СТРШаблон("Дата проверения работ изменилась %1",ЭтотОбъект.Ссылка);
	ИначеЕсли ЭтотОбъект.ВКМ_Специалист <> Ссылка.ВКМ_Специалист Тогда
		ТекстСообщения = СТРШаблон("Специалист изменился в документе %1",ЭтотОбъект.Ссылка);
	КонецЕсли;
	Если ТекстСообщения <> "" Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения; 
		Сообщение.Сообщить();   
		НовоеУведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовоеУведомление.ВКМ_Текст = ТекстСообщения;   
		НовоеУведомление.Записать();
	КонецЕсли;
КонецПроцедуры
